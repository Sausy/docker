echo "====[Start build/create docker Stuff] ====="

#=== parameterisize it =====
echo "======================="
echo "build done"
echo "ARCHITECTUR: $ARCHITECTUR"
echo "ROS-Version: $ROSVERSION"
echo "........................"
echo "TIP: to change these vars"
echo "edit the '.env' file"
echo "======================="

#=== copy ".env" file  =====
find . -maxdepth 1 -type d -exec cp .env {} \;

#=== RPI deployment =====
echo "Raspberry deployment: if you don't know exactly whats going on press N"
read -p "press NO now !?[y/n]" -n 1 -r
if [[ ! $REPLY =~ ^[Nn]$ ]]
 then
 echo "this script just increases deployment speed"
 echo "but it needs modifications and prebuild images"
 echo "if you uncertain about it just use ...build..."
 echo "and get a coffee"

 echo "(change docker hub name to a name where you rosbase can be found)"
 echo "(usfull cmd docker tag rosbase/arm64:melodic sausy/rosbase:latest)"

 DOCKER_HUB_NAME="sausy/rosbase:latest"

 docker pull $DOCKER_HUB_NAME

 docker tag $DOCKER_HUB_NAME rosbase/arm64:melodic
fi

#=== If not first build we can rebuild the imgs =====
#read -p "recreate images" -n 1 -r
#if [[ ! $REPLY =~ ^[Nn]$ ]]
#then
# echo "rebuild"
# cd UdpRosBridge
# docker-compose build
# cd ../.
#fi

echo " "


docker rm $(docker ps --filter=status=exited --filter=status=created -q)

#=== Shall we run it =====
read -p "spinup containers?[y/n]" -n 1 -r
if [[ ! $REPLY =~ ^[Nn]$ ]]
then
 echo "start building images"
 cd roscore
 #docker-compose create
 docker-compose up -d

 cd ../container-exchange
 git clone https://github.com/Sausy/node-red-contrib-web-babylonjs.git
 cd ../nodered
 docker-compose up -d

 cd ../UdpRosBridge
 docker-compose up -d
 cd ../mytriangulation
 docker-compose up -d
 cd ../.
fi




docker update --restart always myroscore
docker update --restart always mynodered
docker update --restart always myinterface
docker update --restart always mydarkroom
